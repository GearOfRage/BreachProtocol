using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

public class Exploit : MonoBehaviour
{
    [Header("Required Details")]
    [SerializeField] public Sprite exploitIcon;
    [SerializeField] public string exploitName = "DefaultExploitName";
    [SerializeField] public string exploitDesc = "DefaultExploitDesc";
    
    [Header("Objects")]
    [SerializeField] private Image exploitIconObj;
    [SerializeField] private TextMeshProUGUI exploitNameObj;
    [SerializeField] private TextMeshProUGUI exploitDescObj;
    
    //[SerializeField] private Button fragmentButtonObj;
    
    public void Start()
    {
        exploitIconObj.sprite = exploitIcon;
        exploitNameObj.text = exploitName;
        exploitDescObj.text = exploitDesc;
        
        Debug.Log( exploitName + " is created.");
        SingleEffect();
    }

    public virtual void SingleEffect()
    {
        
    }
    
    public virtual void RepeatEffect()
    {
        
    }

    // OLD fragment button function
    //
    // public void FragmentButtonClick()
    // {
    //     PlayerManager._instance.score += 250;
    //     PlayerManager._instance.UpdateVisuals();
    //     
    //     Destroy(this.gameObject);
    // }
    
    protected void AddSequenceAutoStretch()
    {
        RectTransform r = GameMaster._instance.sequencesHolder.transform.parent.GetComponent<RectTransform>();
        float ammount = 71;
        
        // Calculate the new size
        Vector2 newSize = r.sizeDelta;
        newSize.y += ammount;

        // Calculate the new position
        Vector3 newPosition = r.anchoredPosition;
        newPosition.y -= ammount / 2; // Half of the stretch amount (71 / 2)

        // Apply the new size and position to the RectTransform
        r.sizeDelta = newSize;
        r.anchoredPosition = newPosition;
    }
    
    // OLD function which was called from OLD fragment function
    //
    // protected void RemoveSequenceAutoStretch()
    // {
    //     RectTransform r = GameMaster._instance.sequencesHolder.transform.parent.GetComponent<RectTransform>();
    //     float ammount = 71;
    //     
    //     // Calculate the new size
    //     Vector2 newSize = r.sizeDelta;
    //     newSize.y -= ammount;
    //
    //     // Calculate the new position
    //     Vector3 newPosition = r.anchoredPosition;
    //     newPosition.y += ammount / 2; // Half of the stretch amount (71 / 2)
    //
    //     // Apply the new size and position to the RectTransform
    //     r.sizeDelta = newSize;
    //     r.anchoredPosition = newPosition;
    // }
}
